/* --------------------------------
    < COMMAND > --- < UNSEND >
-------------------------------- */

// ----- < [ CONFIG ] - TH√îNG TIN V·ªÄ L·ªÜNH > ----- //
const config = {
    name: "unsend",
    description: "L·ªánh s·∫Ω g·ª° tin nh·∫Øn c·ªßa Bot.",
    type: "tool",
    usage: "/kiki g·ª° [ REPLY MESSAGE ]",
    condition: ["go", "thuhoi"],
    exception: [],
    permission: 1
}

// ----- < [ H√ÄM ] - X·ª¨ L√ç L·ªÜNH > ----- //
async function onCall({ message }) {
    await message.react("‚è±");

    const { random } = global.function;
    const errorSentences = [
        "T g·ª° ƒë ƒëc üôÇ",
        "G·ª° ƒë ƒëc t·∫°i m ƒë√≥ üôÇ",
        "L·ªói cmnr thg ngu üôÇ",
        "Djt c·ª• m l·ªói r üôÇ"
    ];
    const unfitTypeSentences = [
        "B·ªë cha c√°i thg ngu, rep c√°i tin nh·∫Øn m mu·ªën g·ª° h·ªô t üôÇ",
        "M ƒë rep tin nh·∫Øn t bt g·ª° cc j ?",
        "Ocsloz c√≥ c√°i l·ªánh cx ƒë bt d√πng, rep tin nh·∫Øn h·ªô ?.",
        "G·ª° c√°i con m·∫π m √†? rep? üôÇ"
    ];

    if (message.type != "message_reply") {
        message.react("‚≠ïÔ∏è");
        message.reply(unfitTypeSentences[random(0, unfitTypeSentences.length)]);
        return;
    }

    try {
        const unsendMessage = message.messageReply.messageID;
        api.unsendMessage(unsendMessage, (err) => { 
            if (err) { 
                message.react("‚≠ïÔ∏è");
                message.reply(errorSentences[random(0, errorSentences.length)]);
            }
            message.react("üîπ");
        });
    } catch(error) {
        message.react("‚≠ïÔ∏è");
        message.reply(errorSentences[random(0, errorSentences.length)]);
    }
}

// ----- < [ EXPORT ] - XU·∫§T MODULE > ----- //
module.exports = {
    config,
    onCall
}